using System;
using System.Collections.Generic;
using System.Text;

namespace Schematix.Classes
{
    internal class ClassGenerator
    {
        public ClassGenerator(string tablename, List<TableColumn> columns, Options options)
        {
            Tablename = tablename;
            Columns = columns;
            Options = options;
        }

        public static string Generate(string tablename, List<TableColumn> columns, Options options)
        {
            if (string.IsNullOrEmpty(options.NameSpace))
                return "Please enter a namespace";

            var generator = new ClassGenerator(tablename, columns, options);
            return generator.GenerateClass();
        }

        private string GenerateClass()
        {
            var sb = new StringBuilder();

            sb.AppendLine($"// Generated by Schematix {DateTime.Now}");
            sb.AppendLine();
            sb.AppendLine("using System;");
            sb.AppendLine("using WisejLib;");
            sb.AppendLine();
            sb.AppendLine($"namespace {Options.NameSpace}");
            sb.AppendLine($"{{");
            sb.AppendLine($"\t[Tablename(\"{Tablename}\")]");
            if (Options.SupportINotifyPropertyChanged)
                sb.AppendLine($"\tpublic class {Tablename} : DbEntity");
            else
                sb.AppendLine($"\tpublic class {Tablename}");
            sb.AppendLine($"\t{{");

            foreach (var column in Columns)
            {
                if (Options.SupportINotifyPropertyChanged)
                {
                    if (!column.IsRowId)
                        sb.AppendLine($"\t\tpublic {column.CSharpType} {column.name} {{ get => GetProperty<{column.CSharpType}>(); set => SetProperty(value); }}");
                }
                else
                    sb.AppendLine($"\t\tpublic {column.CSharpType} {column.name} {{ get; set; }}");

            }

            sb.AppendLine($"\t}}");
            sb.AppendLine($"}}");

            return sb.ToString();
        }

        public string Tablename { get; }
        public List<TableColumn> Columns { get; }
        public Options Options { get; }


    }
}
